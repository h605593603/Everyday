package Y2023.WeeklyCompetition;

import java.util.*;

public class Y231224_second {
    public int maximizeSquareArea(int m, int n, int[] hFences, int[] vFences) {
        Set<Integer> hSet = new HashSet<>();
        PriorityQueue<Integer> maxV = new PriorityQueue<>((a, b) -> b - a);

        hSet.add(m - 1);
        maxV.add(n - 1);

        /* 处理横向栅栏 */
        for (int i = 0; i < hFences.length; i++) {
            hSet.add(hFences[i] - 1);
            hSet.add(m - hFences[i]);
            for (int j = 1; j < i + 1; j++) {
                hSet.add(Math.abs(hFences[i] - hFences[j - 1]));
            }
        }

        /* 处理纵向栅栏 */
        for (int i = 0; i < vFences.length; i++) {
            maxV.add(vFences[i] - 1);
            maxV.add(n - vFences[i]);
            for (int j = 1; j < i + 1; j++) {
                if (!maxV.contains(Math.abs(vFences[i] - vFences[j - 1]))) {
                    maxV.add(Math.abs(vFences[i] - vFences[j - 1]));
                }
            }
        }

        while (!maxV.isEmpty()) {
            int cur = maxV.poll();
            if (hSet.contains(cur)) {
                return (cur * cur) % (1000000007);
            }
        }
        return -1;
    }


    public static void main(String[] args) {
        Y231224_second y231224Second = new Y231224_second();
        int m = 4287;
        int n = 9530;
        int[] hFences = new int[]{3713,1229,613,50,405,2472,3105,689,1617,1375,403,4008,3987,3044,1603,1803,1613,4055,817,3684,1005,1352,3478,2620,602,1209,1644,3449,522,770,2897,4096,3742,3065,1864,3297,1495,3002,539,454,3849,1802,1812,3503,311,324,3592,75,987,1305,530,999,1933,1848,3544,2952,2572,334,2929,775,1977,3745,3075,1860,3375,3093,2488,4198,2184,1843,3217,716,1324,1054,2422,1046,1791,1189,1795,3305,3292,3134,484,2003,3267,3846,4191,2309,1866,2767,304,1777,4182,327,2826,3924,1473,3336,3937,1790,764,1101,1056,1171,3074,2129,3803,1423,2466,1938,1854,3323,2115,1232,984,1990,1206,383,3439,2626,3224,1255,3668,1064,4177,1892,1113,3097,629,2951,1410,668,2844,1721,819,4150,3299,3624,1284,2588,2737,1282,2365,1605,3804,456,3509,3737,1890,3702,791,4029,4004,1169,3955,3677,2677,2650,1031,4093,219,1529,3984,2118,3127,1928,2339,2287,1610,1653,1053,3543,620,1213,548,975,3572,3596,2789};
        int[] vFences = new int[]{7094,5628,1626,1226,7001,3266,661,1521,5337,3276,4109,4487,2644,4322,8011,8374,1261,1279,8832,1837,7231,2537,6435,906,8439,7232,5771,7634,4281,1673,1070,3355,6220,1520,3947,2203,367,4107,5540,1314,3377,8474,8400,9051,883,8627,6710,1123,9155,1554,7147,1064,7000,4873,8254,5597,8692,9078,7052,4393,1871,2816,7652,4929,5729,4478,6953,5073,986,8197,181,2579,3072,5802,7326,114,4221,3970,5118,2260,6747,215,7897,2718,3251,8835,5994,6157,2189,9359,2034,4922,9381,9181,7783,6178,7104,6222,6043,9054,6605,2114,6894,7131,8716,2198,1622,4682,4751,2972,5684,3895,9031,2775,3427,8589,6288,6771,7417,7991,7053,937,8148,1365,8160,4459,8050,4663,4568,7635,8586,1362,6564,6517,6746,6323,3010,9086,7799,9170,5855,7117,1989,8487,2546,6066,4264,4338,8807,5643,909,368,6679,4703,1450,6466,8878,7682,2989,1910,8073,1530,7453,1290,4549,1471,817,8753,4875,3140,3006,8425,5474,7696,4050,8132,8074,1219,5090,6882,3301,8678,3148,6629,1806,8489,8292,4600,4128,5473,5819,6912,5377,4670,8161,2341,3343,8360,8089,8575,3754,1518,3981,1773,1235,4668,3920,836,3796,902,57,2216,7008,877,4103,1188,940,4759,7511,2569,9276,7967,9112,3742,5043,4367,2486,1731,5405,4300,7435,5451,9485,8622,6708,4416,1289,7153,2867,5568,5408,4444,6029,2148,8718,7640,4821,313,4859,2085,6811,6543,3605,509,2852,2421,9188,8081,7487,8046,9301,8569,3609,6930,8012,8665,5861,3328,4551,1686,8302,8492,3838,7997,614,7937,7062,3479,805,2175,2571,908,7469,2701,6937,107,8519,461,4477,3438,5507,7056,2696,8312,7395,776,5504,6102,894,8295,8834,3322,5499,8506,3365,862,8779,5559,1964,2834,6026,6875,3258,5350,8252,3136,4822,277,7026,9201,3794,4110,7567,6320,2518,781,2510,7371,1045,4402,6418,8205,8100,736,5879,5140,1841,3288,489,5016,1862,6594,2690,1203,7747,6443,6032,4358,5690,7873,5042,8552,36,1370,8565,5201,3278,5384,5260,7378,8019,9303,5991,6433,865,1332,3426,3722,2290,7050,8908,4200,2823,7416,9386,3792,6045,7304,8780,4136,9266,4227,753,1437,4225,3181,8285,95,4431,557,4806,2369,7579,7045,7259,9227,7151,1096,3320,8154,3176,1171,6488,9314,1040,9131,8135,4030,83,3991,485,6498,3462,783,7262,6715};
        System.out.println(y231224Second.maximizeSquareArea(m, n, hFences, vFences));

    }
}

